<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:ElementFinder.Controls">

    <Style TargetType="{x:Type Controls:CopyableTextBox}">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:CopyableTextBox}">
                    <Grid>
                        <TextBox Text="{TemplateBinding Text}" IsReadOnly="True" />
                        <Controls:CopyButton HorizontalAlignment="Right" x:Name="PART_CopyButton" ToolTip="{TemplateBinding CopyButtonToolTip}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:AutomationPropertiesControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:AutomationPropertiesControl}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:Property}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:Property}">
                    <DockPanel Background="{TemplateBinding Background}" Margin="1">
                        <TextBlock Text="{TemplateBinding Title}" DockPanel.Dock="Left" Width="150" VerticalAlignment="Center" Margin="2,0" />
                        <Controls:CopyableTextBox Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Highlight" Value="True">
                            <Setter Property="Background" Value="LightBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <Style TargetType="{x:Type Controls:ToggleSlider}">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderBrush="Brown" BorderThickness="1" x:Name="PART_Section" ToolTip="Deactivated; Click to activate" Background="{TemplateBinding Background}">
                        <DockPanel>
                            <Border Width="10" BorderThickness="1" BorderBrush="Gray" x:Name="PART_Slider" DockPanel.Dock="Left">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop Color="Gray" />
                                        <GradientStop Color="AliceBlue" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>

                            <TextBlock Text="0" x:Name="PART_State" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="5,0" />

                            <Grid />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Section" Property="Background" Value="LightGreen" />
                            <Setter TargetName="PART_Slider" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="PART_State" Property="Text" Value="1" />
                            <Setter TargetName="PART_State" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="PART_Section" Property="ToolTip" Value="Activated; Click to Deactivate" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:ViewChangeButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Brown" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:ViewChangeButton}">
                    <Border BorderBrush="{TemplateBinding Foreground}" BorderThickness="1" Background="{TemplateBinding Background}">
                        <Path x:Name="PART_Arrow"
                                Data="M 1,4.5 L 4.5,1 8,4.5"
                                HorizontalAlignment="Center"
                                SnapsToDevicePixels="false"
                                Stroke="{TemplateBinding Foreground}"
                                StrokeThickness="2"
                                VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMinimized" Value="True">
                            <Setter TargetName="PART_Arrow" Property="Data" Value="M 1,1.5 L 4.5,5 8,1.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:CloseButton}">
        <Setter Property="Foreground" Value="Brown" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:CloseButton}">
                    <Border BorderBrush="Brown" BorderThickness="1" Background="{TemplateBinding Background}">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Height="9" Width="9">
                            <Line Stretch="Fill" X1="0" Y1="0" X2="1" Y2="1" Stroke="{TemplateBinding Foreground}" StrokeThickness="1.5" />
                            <Line Stretch="Fill" X1="1" Y1="0" X2="0" Y2="1" Stroke="{TemplateBinding Foreground}" StrokeThickness="1.5" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFFF6666" />
                            <Setter Property="Foreground" Value="WhiteSmoke" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:ResizeThumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:ResizeThumb}">
                    <Border Background="LightSkyBlue" Cursor="SizeWE" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:CopyButton}">
        <Setter Property="Foreground" Value="Brown" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:CopyButton}">
                    <Border BorderBrush="Brown" BorderThickness="1,0,0,0" Background="{TemplateBinding Background}">
                        <TextBlock Text="c" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,2" Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightBlue" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="WhiteSmoke" />
                            <Setter Property="Background" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:ShortcutTextBox}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:ShortcutTextBox}">
                    <Border BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}">
                        <DockPanel>
                            <Button Content="X" DockPanel.Dock="Right" x:Name="PART_ClearButton" />
                            <TextBox Text="{TemplateBinding Text}" x:Name="Part_TextBox" IsReadOnly="True" ToolTip="Click in the box and press the keys you want to use as a shortcut" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" Value="Brown" />
                        </Trigger>
                        <Trigger Property="HasResetButton" Value="False">
                            <Setter TargetName="PART_ClearButton" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:TitledItemsControl}" BasedOn="{StaticResource {x:Type ItemsControl}}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="VerticalTitleAlignments" Value="Center" />
        <Setter Property="HorizontalTitleAlignments" Value="Left" />
        <Setter Property="TitleMargins" Value="5,0" />
        <Setter Property="HorizontalContentAlignments" Value="Stretch" />
        <Setter Property="VerticalContentAlignments" Value="Center" />
        <Setter Property="ContentMargins" Value="0,2" />
    </Style>

    <Style TargetType="{x:Type Controls:TitledItem}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="VerticalTitleAlignment" Value="{Binding VerticalTitleAlignments, RelativeSource={RelativeSource AncestorType={x:Type Controls:TitledItemsControl}}}" />
        <Setter Property="HorizontalTitleAlignment" Value="{Binding HorizontalTitleAlignments, RelativeSource={RelativeSource AncestorType={x:Type Controls:TitledItemsControl}}}" />
        <Setter Property="TitleMargin" Value="{Binding TitleMargins, RelativeSource={RelativeSource AncestorType={x:Type Controls:TitledItemsControl}}}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignments, RelativeSource={RelativeSource AncestorType={x:Type Controls:TitledItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignments, RelativeSource={RelativeSource AncestorType={x:Type Controls:TitledItemsControl}}}" />
        <Setter Property="ContentMargin" Value="{Binding ContentMargins, RelativeSource={RelativeSource AncestorType={x:Type Controls:TitledItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:TitledItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="title" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter ContentSource="Title"
                                          VerticalAlignment="{TemplateBinding VerticalTitleAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalTitleAlignment}"
                                          Margin="{TemplateBinding TitleMargin}" />

                        <ContentPresenter Grid.Column="1"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding ContentMargin}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Controls:BasicElementSuggestor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:BasicElementSuggestor}">
                    <DockPanel Margin="10">
                        <TextBlock DockPanel.Dock="Top"
                                   Text="{Binding SuggestedBasicElementTitle, RelativeSource={RelativeSource TemplatedParent}}"
                                   HorizontalAlignment="Center"
                                   Foreground="SteelBlue"
                                   FontSize="14" />
                        
                        <TextBlock DockPanel.Dock="Bottom"
                                   Background="Wheat"
                                   Padding="5,2"
                                   Text="It might be that the element will be changed anyhow or if the element is gone an exception dialog appears."
                                   TextWrapping="Wrap" />
                        
                        <Button x:Name="PART_TryButton" Content="Read Properties" Margin="10" DockPanel.Dock="Top" HorizontalAlignment="Center" />
                        
                        <Grid>
                            <ListBox ItemsSource="{Binding Properties, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Name}" Padding="4" Width="150" />
                                            <TextBlock Text="=" Padding="4" />
                                            <Label Content="{Binding Value}" Padding="4" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                            <TextBlock Text="{Binding Message, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
